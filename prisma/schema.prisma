// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
  previewFeatures=["views"]
}


generator erd {
  provider = "prisma-erd-generator"
  output = "../erd.svg"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


view User {
  id        String @id @db.Uuid
  email     String? @unique
  profile   Profile? 
  officer   Officer? 
  @@map("user_view")
}

model Profile {
  id        String @id @default(uuid()) 
  name      String
  phone     String
  account   String?
  role      Role? @default(GUEST)
  user      User @relation(fields: [userId], references: [id])
  userId    String @unique @db.Uuid
  files     File[]
}

model Officer {
  id        String @id @default(uuid()) 
  title     String
  userId    String? @unique @db.Uuid
  user      User? @relation(fields: [userId], references: [id])
  sites     Site[]
}

model Customer {
  id        String @id @default(uuid())
  name      String
  address   String
  phone     String
  dos       Do[]
}

model Item {
  id        String @id @default(uuid())
  name      String
  uom       String
  dolines   Doline[]
}

enum Role {
  ADMIN
  OFFICER
  GUEST
}


model Site {
  id        String @id @default(uuid())
  name      String
  officer   Officer? @relation(fields: [officerId], references: [id])
  officerId String?
  dolines   Doline[]
}

model Do {
  id        String @id @default(uuid())
  number    String @unique
  customer  Customer @relation(fields: [customerId], references: [id])
  customerId String
  date       DateTime
  project    String
  dolines    Doline[]
}

model Doline {
  id        String @id @default(uuid())
  do        Do @relation(fields: [doId], references: [id])
  doId      String
  site      Site @relation(fields: [siteId], references: [id])
  siteId    String
  item      Item @relation(fields: [itemId], references: [id])
  itemId    String
  qty       Int
  receipt   File?
  feedback  String?
  approved  Boolean?
  startDate DateTime
  endDate   DateTime
}

model File {
  id        String @id @default(uuid())
  sId       String @unique
  path      String @unique
  name      String
  size      Int
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  doline    Doline? @relation(fields: [dolineId], references: [id])
  dolineId  String? @unique
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String 
}